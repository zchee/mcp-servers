[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "mem0-mcp"
dynamic = ["version"]
description = "Add your description here"
license = "Apache-2.0"
authors = [
  { name = "Koichi Shiraishi", email = "zchee.io@gmail.com" },
]
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    "dotenv>=0.9.9",
    "mcp>=1.13.1",
    "mem0ai>=0.1.116",
    "orjson>=3.11.3",
    "starlette>=0.47.3",
    "uvicorn>=0.35.0",
]

[tool.hatch.version]
path = "src/mem0_mcp/__version__.py"

[project.scripts]
mem0-mcp = "mem0_mcp.main:main"

# TODO(zchee): switch to uv
[tool.hatch.build.targets.sdist]
only-include = ["src/mem0_mcp"]

[dependency-groups]
dev = [
    "mypy>=1.17.1",
    "pyright>=1.1.404",
    "ruff>=0.12.11",
]

# TODO(zchee): switch to uv
[tool.hatch.envs.types.scripts]
format = "uv run ruff check --fix --unsafe-fixes {args:src/mem0_mcp tests} && uv run ruff format {args:src/mem0_mcp tests}"
lint = "uv run mypy --install-types --non-interactive {args:src/mem0_mcp tests} && uv run pyright {args:src/mem0_mcp tests} && uv run ruff check {args:src/mem0_mcp tests} && uv run ruff format --check {args:src/mem0_mcp tests}"

[tool.ruff]
line-length = 120

[tool.ruff.lint]
preview = true

# See https://docs.astral.sh/ruff/rules for more information.
select = [
  "ARG",    # flake8-unused-arguments
  "B",      # flake8-bugbear
  "C4",     # flake8-comprehensions
  "D101",   # pydocstyle/undocumented-public-class
  "D102",   # pydocstyle/undocumented-public-method
  "D103",   # pydocstyle/undocumented-public-function
  "E",      # pycodestyle (Error)
  "F",      # Pyflakes
  "I",      # isort
  "INP001", # flake8-no-pep420/implicit-namespace-package
  "N",      # pep8-naming
  "SIM",    # flake8-simplify
  "TD002",  # flake8-todos/missing-todo-author
  "TD006",  # flake8-todos/invalid-todo-capitalization
  "TID",    # flake8-tidy-imports
  "UP",     # pyupgrade
  "W",      # pycodestyle (Warning)
]

ignore = [
  "N802", # Function name {name} should be lowercase
  "N805", # First argument of a method should be named self

  # ruff formatter recommends to disable those. see https://docs.astral.sh/ruff/formatter/#conflicting-lint-rules
  "COM812", # Trailing comma missing
  "COM819", # Trailing comma prohibited
  "D206",   # Docstring should be indented with spaces, not tabs
  "D300",   # Use triple double quotes """
  "E111",   # Indentation is not a multiple of
  "E114",   # Indentation is not a multiple of {indent_size} (comment)
  "E117",   # Over-indented (comment)
  "E203",   # Whitespace before '{symbol}'
  "E501",   # Line too long ({width} > {limit})
  "ISC001", # Implicitly concatenated string literals on one line
  "ISC002", # Implicitly concatenated string literals over multiple lines
  "Q000",   # Single quotes found but double quotes preferred
  "Q001",   # Single quote multiline found but double quotes preferred
  "Q002",   # Single quote docstring found but double quotes preferred
  "Q003",   # Change outer quotes to avoid escaping inner quotes
  "W191",   # Indentation contains tabs
]

[tool.ruff.format]
preview = true

[tool.mypy]
python_version = "3.13"
ignore_missing_imports = true
check_untyped_defs = true
strict = true
disable_error_code = [
  "no-untyped-call", # Call to untyped function "xxx" in typed context
  "no-any-return",   # Returning Any from function declared to return "xxx"
  "misc",            # Class cannot subclass "xxx" (has type "Any")
  "unused-ignore",   # Unused "type: ignore" comment
]

[tool.pyright]
pythonVersion = "3.13"
typeCheckingMode = "standard"

# TODO(zchee): switch to uv?
[tool.coverage.run]
source_pkgs = ["mem0-mcp", "tests"]
branch = true
parallel = true
omit = [
  "src/mem0_mcp/__version__.py",
]

[tool.coverage.paths]
mem0-mcp = ["src/mem0_mcp", "*/mem0_mcp/src/mem0_mcp"]
tests = ["tests", "*/mem0_mcp/tests"]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]
